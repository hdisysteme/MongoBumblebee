name: Deploy release to Maven Central

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number to release'
        required: true
        
jobs:
  publish:
    name: Create and publish a release
    runs-on: ubuntu-latest
    steps:
    
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17 for publishing to Maven Central Repository
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          cache: maven
          server-id: ossrh
          server-username: OSSRH_USERNAME
          server-password: OSSRH_TOKEN
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
          
      - name: debug
        run: echo "Hello $OSSRH_USERNAME. $BUILD. My API_KEY is ${{secrets.GPG_TEST}}"

      - name: Create tag and publish to the Maven Central Repository
        run: |
          mvn --batch-mode versions:set -DnewVersion=${{ github.event.inputs.version }}
          git config --global user.email "bob@hdi.de"
          git config --global user.name "Bob the Builder"
          git add pom.xml
          git commit -m "updating version to ${{ github.event.inputs.version }} in pom"
          git tag -f -a v${{ github.event.inputs.version }} -m "tagging version ${{ github.event.inputs.version }}"
          git push -f --tags
          mvn --batch-mode deploy -DskipTests -Ppublish
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_TOKEN: ${{ secrets.OSSRH_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: v${{ github.event.inputs.version }}
          release_name: Release v${{ github.event.inputs.version }}
          body: |
            Release v${{ github.event.inputs.version }}
          draft: false
          prerelease: false
